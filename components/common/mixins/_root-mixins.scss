
$base-size: $base-font;
@function f-size($target, $context: $base-font) {
    @return ($target / $context) * 1rem;
}




// h1-h6 level


@each $level, $size in $h-sizes {
  h#{$level},
  .h#{$level} {
    font-family: $h-font;
    color: $title-color;
    @each $bp, $fs in $size {
      @if ($bp == null) {
        font-size: size($fs);
      }@else {
        @include min($bp) {
          font-size: size($fs);
        }
      }
    }
  }
}
// .ttl sizes (Custom tilte)

// @each $level, $size in $ttl-sizes {
//   .ttl-#{$level} {
//     font-family: $h-font;
//     color: $title-color;
//     @each $bp, $fs in $size {
//       @if ($bp == null) {
//         font-size: size($fs);
//       }@else {
//         @include min($bp) {
//           font-size: size($fs);
//         }
//       }
//     }
//   }
// }

// paragraphs

p {
  font-size: size(16);
  color: $text-color;
  @include lineHeight(16, 27);
  @include min(1600) {
    font-size: size(20);
    @include lineHeight(20, 31);
  }
}

// Custom paragraphs sizes
@each $level, $size in $p-sizes {
  .fs-#{$level} {
    color: $text-color;
    @each $bp, $fs in $size {
      @if ($bp == null) {
        font-size: size($fs);
      } @else {
        @include min($bp) {
          font-size: size($fs);
        }
      }
    }
  }
}

